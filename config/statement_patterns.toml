# Statement Parsing Patterns and Detection Rules
# Configuration for PDF statement type detection and parsing

[detection.credit]
# Credit card statement indicators
indicators = [
    "visa signature",
    "mastercard", 
    "credit card",
    "purchases and adjustments"
]
# Strong indicators with higher weights
strong_indicators = {}
weight = 1

[detection.checking]
# Checking account statement indicators  
indicators = [
    "adv plus banking",
    "advantage plus", 
    "checking"
]
strong_indicators = { "your adv plus banking" = 5 }
weight = 1

[detection.savings]
# Savings account statement indicators
indicators = [
    "regular savings",
    "savings account", 
    "your regular savings",
    "annual percentage yield",
    "interest earned"
]
strong_indicators = { "your regular savings" = 5 }
weight = 1

[account_patterns]
# Regular expressions for extracting account numbers
checking = 'Account number:\s*(\d{4}\s+\d{4}\s+\d{4})'
savings = 'Account number:\s*(\d{4}\s+\d{4}\s+\d{4})'
credit = 'Account #\s*(\d{4}\s+\d{4}\s+\d{4}\s+\d{4})'

[transaction_sections.checking]
# Section patterns for different transaction types in checking statements
deposits = 'Deposits and other additions.*?Total deposits and other additions'
withdrawals = '''Checks paid.*?Total checks paid|Other withdrawals.*?Total other withdrawals'''

[transaction_sections.savings]
# Section patterns for savings statements
deposits = 'Deposits and other additions.*?Total deposits and other additions'
withdrawals = 'Other withdrawals.*?Total other withdrawals'

[transaction_sections.credit]
# Transaction patterns for credit card statements
patterns = [
    '(\d{2}/\d{2})\s+(\d{2}/\d{2})\s+([A-Za-z0-9\*\-\'\s\.\,\(\)#]+?)\s+(\d{1,3}(?:,\d{3})*\.\d{2})',
    '(\d{1,2}/\d{1,2}/\d{2,4})\s+([A-Za-z0-9\*\-\'\s\.\,\(\)#]+?)\s+(\d{1,3}(?:,\d{3})*\.\d{2})',
    '(\d{1,2}/\d{1,2})\s+(.+?)\s+(\d{1,3}(?:,\d{3})*\.\d{2})'
]

[statement_period]
# Patterns for extracting statement date ranges
patterns = [
    'for\s+([A-Za-z]+)\s+(\d{1,2}),?\s*(\d{4})\s+to\s+([A-Za-z]+)\s+(\d{1,2}),?\s*(\d{4})',
    '([A-Za-z]+)\s+(\d{1,2}),?\s*(\d{4})\s+to\s+([A-Za-z]+)\s+(\d{1,2}),?\s*(\d{4})',
    '(\d{1,2})/(\d{1,2})/(\d{2,4})\s+to\s+(\d{1,2})/(\d{1,2})/(\d{2,4})'
]

# Month name to number mapping
month_names = {
    "january" = 1, "february" = 2, "march" = 3, "april" = 4,
    "may" = 5, "june" = 6, "july" = 7, "august" = 8, 
    "september" = 9, "october" = 10, "november" = 11, "december" = 12
}

[text_sanitization]
# Patterns for removing sensitive information from descriptions
patterns = [
    # Account numbers (16-digit)
    { pattern = '\b\d{4}\s*\d{4}\s*\d{4}\s*\d{4}\b', replacement = '[ACCOUNT]' },
    # Account numbers (12-digit)  
    { pattern = '\b\d{4}\s*\d{4}\s*\d{4}\b', replacement = '[ACCOUNT]' },
    # Reference numbers (8+ digits)
    { pattern = '\b\d{8,}\b', replacement = '[REF#]' },
    # Phone numbers
    { pattern = '\b\d{3}[-.]?\d{3}[-.]?\d{4}\b', replacement = '[PHONE]' },
    # Multiple spaces
    { pattern = '\s+', replacement = ' ' }
]